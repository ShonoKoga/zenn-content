"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.exec = void 0;
var path_1 = __importDefault(require("path"));
var fs_extra_1 = __importDefault(require("fs-extra"));
var arg_1 = __importDefault(require("arg"));
var slug_helper_1 = require("../utils/slug-helper");
var safe_1 = __importDefault(require("colors/safe"));
var generatePlaceholderChapters = function (bookDirPath) {
    var chapterBody = ["---", 'title: ""', "---"].join("\n") + "\n";
    ["1.md", "2.md", "3.md"].forEach(function (chapterFileName) {
        try {
            fs_extra_1.default.writeFileSync(path_1.default.join(bookDirPath, chapterFileName), chapterBody, { flag: "wx" } // Don't overwrite
            );
            console.log("Chapter \uD83D\uDCC4" + safe_1.default.green(chapterFileName) + " created.");
        }
        catch (e) {
            console.log(safe_1.default.red("チャプターファイルの作成時にエラーが発生") + e);
        }
    });
};
exports.exec = function (argv) {
    var args = arg_1.default({
        "--slug": String,
        "--title": String,
        "--published": String,
        "--summary": String,
        "--price": Number,
    }, { argv: argv });
    var slug = args["--slug"] || slug_helper_1.generateSlug();
    if (!slug_helper_1.validateSlug(slug)) {
        var errorMessage = slug_helper_1.getSlugErrorMessage(slug);
        console.error(safe_1.default.red("\u30A8\u30E9\u30FC\uFF1A" + errorMessage));
        process.exit(1);
    }
    var bookDirPath = path_1.default.join(process.cwd(), "books", slug);
    try {
        fs_extra_1.default.mkdirpSync(bookDirPath);
    }
    catch (e) {
        // already exist => do nothing
    }
    var title = args["--title"] || "";
    var summary = args["--summary"] || "";
    var published = args["--published"] === "true" ? "true" : "false"; // デフォルトはfalse
    var price = args["--price"] || 0; // デフォルトは¥0
    var configYamlBody = [
        "title: \"" + title + "\"",
        "summary: \"" + summary + "\"",
        "topics: []",
        "published: " + published,
        "price: " + price + " # \u6709\u6599\u306E\u5834\u5408200\u301C5000",
    ].join("\n") + "\n";
    var configYamlPath = path_1.default.join(bookDirPath, "config.yaml");
    try {
        fs_extra_1.default.writeFileSync(configYamlPath, configYamlBody, { flag: "wx" } // Don't overwrite
        );
        console.log("\uD83D\uDEE0" + safe_1.default.green("books/" + slug + "/config.yaml") + " created.");
    }
    catch (e) {
        console.log(safe_1.default.red("エラーが発生しました") + e);
        process.exit(1);
    }
    generatePlaceholderChapters(bookDirPath);
};
